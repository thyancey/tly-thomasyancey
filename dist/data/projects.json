{
  "items":[
    {
      "title": "Misc projects",
      "description": "A few small projects before we get to the rest of em",
      "linkTitle": "",
      "theme": "",
      "dividerTheme": "clouds-left",
      "text": "Keep scrolling up (or use the 'Skip to...' in the lower left) to jump to other projects, some of which are on github for you poke around with!",
      "listGroups": [],
      "details": [
        {
          "title": "Some cardgame",
          "description": "A cardgame based on matching unrelated things",
          "blorbs": [
            [
              {
                "width": "full",
                "link": "https://www.thomasyancey.com/projects/cards/index.html",
                "linkText": "try it out!"
              },
              {
                "width": "full",
                "text": "I'm actively working on this one, trying to get it to a pseudo-finished state. Blog post coming soon!"
              },
              {
                "width": "full",
                "image": "project-misc/cardgame-01.jpg"
              }
            ]
          ]
        },
        {
          "title": "Bingotown",
          "description": "A simple bingo game sourced from custom word banks",
          "blorbs": [
            [
              {
                "width": "full",
                "link": "https://www.thomasyancey.com/projects/bingotown/index.html",
                "linkText": "try it out!"
              },
              {
                "width": "full",
                "image": "project-misc/bingotown.jpg"
              }
            ]
          ]
        },
        {
          "title": "Butterbait",
          "description": "Hey y'all! ...not sure where the inspiration for this came from",
          "blorbs": [
            [
              {
                "width": "full",
                "link": "https://www.thomasyancey.com/tests/butterbait/index.html",
                "linkText": "try it out!"
              },
              {
                "width": "full",
                "image": "project-misc/butterbait.jpg"
              }
            ]
          ]
        },
        {
          "title": "Nerftillery",
          "description": "Dialing in artillery for office warfare",
          "blorbs": [
            [
              {
                "width": "full",
                "text": [
                  "The general idea is that you could calibrate a remote-operated nerf turret to certain coordinates, then present those on an easy to use map",
                  "No physics, geometry, sensorts, or OCR involved here... the user calibrates a target with the real turret until the darts land where they want. That rotation/angle is then locked in, and can be replayed later",
                  "I got most of the little web app working (and for multiple locations/turrets/maps), but got hung up on actually building the turret and microcontroller to run it"
                ]
              }
            ],
            [
              {
                "width": "half",
                "image": "project-misc/nerftillery-01.jpg"
              },
              {
                "width": "half",
                "image": "project-misc/nerftillery-02.jpg"
              }
            ]
          ]
        },
        {
          "title": "Shifty shapes",
          "description": "A physics game for android devices",
          "blorbs": [
            [
              {
                "width": "half",
                "text": [
                  "The core concept used the accelerometer to influence the gravity in the game. Basically - the objects in the game responded as if you were holding a box with them inside.",
                  "Like a few other projects, this one died when I stopped developing in Flash"
                ]
              },
              {
                "width": "half",
                "image": "project-misc/shifty-03.jpg"
              }
            ],
            [
              {
                "width": "half",
                "image": "project-misc/shifty-01.jpg"
              },
              {
                "width": "half",
                "text": [
                  "To play, you flip and shake your phone to get similar pieces to touch",
                  "Other features like barriers, pits, and explosions were added in to keep the gameplay fresh, as you do with good mobile games"
                ]
              }
            ]
          ]
        },
        {
          "title": "Extreme Cat Attack",
          "description": "Control princess buttercup as she defends earth from terrible cats (or don't)",
          "blorbs": [
            [
              {
                "width": "full",
                "link": "//extremecatattack.com",
                "linkText": "you could try running it, but i wouldnt recommend all the hoops and issues with running swf files on newer machines"
              },
              {
                "width": "half",
                "text": [
                  "This was the first large game I... never finished. I built it in flash, making almost all of the systems on my own. It was a great project to have while I was learning how to code"
                ]
              },
              {
                "width": "half",
                "image": "project-misc/eca-01.jpg"
              }
            ],
            [
              {
                "width": "half",
                "image": "project-misc/eca-02.jpg"
              },
              {
                "width": "half",
                "text": [
                  "I had built in a lot of neat features like upgrades, custom load-outs, a store, an enemy encyclopedia, etc"
                ]
              }
            ],
            [
              {
                "width": "half",
                "text": [
                  "Ultimately the core game, although fun to make, wasn't that fun. The animations and features sure were neat though.",
                  "What really killed it for me was the lack of support for Flash content."
                ]
              },
              {
                "width": "half",
                "image": "project-misc/eca-03.jpg"
              }
            ]
          ]
        }
      ]
    },
    {
      "title": "Virtual Pet",
      "description": "like a tom-a-got-yee",
      "theme": "",
      "dividerTheme": "clouds-left",
      "text": "Virtual Pet is a sandbox framework that lets you take care of little creatures. It's an 'idle' game that stores timestamps within cookies, so it works even if you don't have the page open all the time. At the moment, it's just an MVP without a backend, but I hope to finish this at some point so that anyone can have browser pets made of their favorite things",
      "listGroups": [
        {
          "title": "Links",
          "items": [
            {
              "type": "link",
              "text": "Try it now!",
              "url": "https://www.thomasyancey.com/projects/virtualpet/index.html"
            },
            {
              "type": "link",
              "text": "GitHub",
              "url": "//github.com/thyancey/tly-virtualpet"
            }
          ]
        }
      ],
      "details": [
        {
          "title": "Little dudes that live in your browser",
          "description": "",
          "blorbs": [
            [
              {
                "width": "full",
                "text": "You can define graphics and behaviors for anything, and make it come to life, even while the website isn't open! Keep that little guy fed now"
              },
              {
                "width": "full",
                "image": "project-virtualpet/virtualpet-01.jpg"
              }
            ]
          ]
        },
        {
          "title": "Stats, states, and actions",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": [
                  "Every pet can be assigned flexible values that drive its behavior",
                  "Let's say you wanna make a can of soda into a pet- You may give it a stat 'bubblyness' and 'fullness', the states 'empty', 'flat', 'normal' and 'exploded', and the actions 'shake it up' and 'drink it'",
                  "By definining these attributes and some relationships between them, perhaps the can looses bubblyness overtime as it sits idle. If the can looses too much bubblyness it gets 'flat', but you can 'shake it up' to increase bubblyness, but if to you go too far it'll be 'exploded'"
                ]
              },
              {
                "width": "half",
                "image": "project-virtualpet/virtualpet-02.jpg"
              }
            ]
          ]
        },
        {
          "title": "behavior loop",
          "description": "",
          "blorbs": [
            [
              {
                "width": "full",
                "text": [
                  "Relationships between pet attributes allow them to come to life without a lot of work",
                  "As time goes on, a stat (like 'hunger') increases, if that stat is too high, the pet may go into a 'hungry' mood, which might make it angry, and if it gets too hungry it could croak!"
                ]
              },
              {
                "width": "full",
                "type": "link",
                "link": "//github.com/thyancey/tly-virtualpet",
                "linkText": "This ones a lil tough to describe in detail here, so I made a nice readme on github with pictures and everything"
              },
              {
                "width": "full",
                "image": "project-virtualpet/virtualpet-04.jpg"
              }
            ]
          ]
        },
        {
          "title": "make anything!",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": [
                  "Some stuff about how the app is loose on purpose. As long as you can animate it, you can make it a desktop pet!",
                  "Whether it's a stock photo, some cheerios on your fridge, or a full-blown spritesheet from your favorite videogame, make it come to life!"
                ]
              },
              {
                "width": "half",
                "image": "project-virtualpet/virtualpet-03.jpg"
              },
              {
                "width": "full",
                "type": "link",
                "link": "https://www.thomasyancey.com/projects/virtualpet/index.html",
                "linkText": "check it out now!"
              }
            ]
          ]
        }
      ]
    },
    {
      "title": "Guitar App",
      "description": "Music theory and learning tool",
      "theme": "guitarapp",
      "dividerTheme": "fretboard-right",
      "text": [
        "As one of my 10,000 hobbies, playing guitar is something I sorta know how to do, but I'm not very good at. I've been trying to go past chords and tabs and learn some more fundamental concepts of music theory. This is an app I made to learn notes and scales on a guitar",
        "Note: the writeup here is out of date, the app has changed look and feel significantly"
      ]
        ,
      "listGroups": [
        {
          "title": "Links",
          "items": [
            {
              "type": "link",
              "text": "Try it now!",
              "url": "https://www.thomasyancey.com/projects/guitarapp/index.html"
            },
            {
              "type": "link",
              "text": "GitHub",
              "url": "//github.com/thyancey/tly-guitarapp"
            }
          ]
        }
      ],
      "details": [
        {
          "title": "Drag/Drop Layouts",
          "description": "I'm not the best at UX, so just do whatever you want",
          "blorbs": [
            [
              {
                "width": "full",
                "text": "While designing this app, I kept changing my mind on which panels should go where. Especially when running it on a phone, tablet, or desktop, the needs for panels and layouts varies. The final thing was that this app serves different needs, some people won't need the fretboard, but may want the chord panel. To serve all these constraints, I made it so the user can rearrange the panels however they want. Layouts are saved to and loaded from localStorage for convenience."
              },
              {
                "width": "full",
                "image": "project-guitarapp/guitarapp-02.jpg"
              }
            ]
          ]
        },
        {
          "title": "About the key and scale selection",
          "description": "Music theory in practice",
          "blorbs": [
            [
              {
                "width": "full",
                "text": [
                  "I never had the chance to take a class in music theory, so I really had to wing this one and learn along the way. Using some common music patterns and simple arithmatic, you can select any key, scale, or instrument defined and the available notes will be calculated!",
                  "I hit a wall when trying to calculate chords and scale shapes. I got sort of close, but since the fingerings are sort of subjective on what is comfortable for the human hand, I had to fall back to manually entering chord fingerings.",
                  "I also need to figure out how to predict chords used in non-western scales. For example, the western major scale uses the major triad, which uses chords of its notes in the (triads? I'm winging it here) of [ major, minor, minor, major, major, minor, diminished, major ]"
                ]
              }
            ]
          ]
        },
        {
          "title": "About the fretboard",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": [
                  "This represents the neck of a variety of string instruments. The notes dynamically update based on your current key, scale, and/or chord configuration.",
                  "Clicking the notes on the fretboad will play that MIDI note.",
                  "It was a little tricky, but I got it so it will work for multiple instruments, even wacky ones like a banjo. In the future, I'll try to update the look a little better and figure out how to add support for fretless instruments."
                ]
              },
              {
                "width": "half",
                "image": "project-guitarapp/guitarapp-03.jpg"
              }
            ]
          ]
        }
      ]
    },
    {
      "title": "Yanzee",
      "description": "A drawing game that you play with friends",
      "linkTitle": "",
      "theme": "",
      "dividerTheme": "clouds-left",
      "text": "This is an MVP implementation of a multiplayer game using websockets, inspired by jackbox's easy to use lobby system and MS Paint. Eventually, I hope to build additional game modes and rework the infrastructure into a more scaleable solution",
      "listGroups": [
        {
          "title": "Links",
          "items": [
            {
              "type": "link",
              "text": "Play the alpha now!",
              "url": "https://www.thomasyancey.com/projects/yanzee/index.html"
            }
          ]
        }
      ],
      "details": [
        {
          "title": "So... you can draw in this drawing game, right?",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": "I'm focusing on providing a clean drawing UI that works both on mobile and desktop. As one player draws, it sends 'brush' information to other players, effectively drawing on their canvas in realtime. Although there are only basic drawing tools at the moment, I hope to pepper in some additonal fun features."
              },
              {
                "width": "half",
                "image": "project-yanzee/yanzee-02.jpg"
              }
            ]
          ]
        },
        {
          "title": "but its not just gonna be drawings!",
          "description": "i'm hoping to build in more modes in the future to really spice it up",
          "blorbs": [
            [
              {
                "width": "half",
                "text": [
                  "custom word lists - users will be able to point to a file (or perhaps upload their own) wordlists, so that they can easily set up a custom game of inside jokes",
                  "voting sessions - some modes that allow multiple people to participate and judge whos best"
                ]
              },
              {
                "width": "half",
                "image": "project-yanzee/yanzee-03.jpg"
              },
              {
                "width": "half",
                "image": "project-yanzee/yanzee-04.jpg"
              },
              {
                "width": "half",
                "text": [
                  "custom palettes - along with custom words, users can define a color scheme and tie them to specific words if they want!",
                  "custom images - some game modes built around doodling on an image from the internet, for the memers out there",
                  "thats just a couple of the ideas i had, hopefully ill get back into working on this soon!"
                ]
              }
            ]
          ]
        },
        {
          "title": "Lobby system",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": [
                  "I'm hoping to recreate an experience as easy as the one that jackbox games provide. its important to me that games like this can be shared with a link, and without a user having to sign up for something",
                  "There is a long way to go in terms of implementing a more scaleable solution. Eventually I hope to get the backend into AWS and properly load balanced so that I could scale it up if I wanted to."
                ]
              },
              {
                "width": "half",
                "image": "project-yanzee/yanzee-01.jpg"
              },
              {
                "width": "full",
                "type": "link",
                "link": "https://www.thomasyancey.com/projects/virtualpet/index.html",
                "linkText": "you can play a version of it now (with friends!), it just might take ~30sec for the server to spin up"
              }
            ]
          ]
        }
      ]
    },
    {
      "title": "Raccoon Trapper",
      "description": "Phaser JS game",
      "linkTitle": "",
      "theme": "",
      "dividerTheme": "clouds-left",
      "text": "Ive been messing around with Phaser JS and spritesheets recently.  Here's a game where an old lady domesticates raccoons",
      "listGroups": [
        {
          "title": "Links",
          "items": [
            {
              "type": "link",
              "text": "play the prototype",
              "url": "https://www.thomasyancey.com/projects/raccoon-trapper/index.html"
            }
          ]
        }
      ],
      "details": [
        {
          "title": "What is this game",
          "description": "like Tapper, but with chonky bois",
          "blorbs": [
            [
              {
                "width": "half",
                "text": "Most of the gameplay inspiration is drawn from the classic arcade game 'Tapper'. A lot of thought has gone into the mechanics so that it has a feel of its own and sorta works with the concept of a crazy old lady taming raccoons"
              },
              {
                "width": "half",
                "image": "project-raccoontrapper/tapper.jpg"
              }
            ],
            [
              {
                "width": "full",
                "text": "Raccoons come from the forest, they must be fed or you will be eaten! After feeding racoons, they fall in love with you. As a strong, independent old lady, you must sling bowls of cat food into the abyss, hug the happy raccoons, and ninja kick the angry ones"
              },
              {
                "width": "full",
                "image": "project-raccoontrapper/raccoontrapper-01.png"
              }
            ]
          ]
        },
        {
          "title": "sprites and animation with Aseprite",
          "description": "",
          "blorbs": [
            [
              {
                "width": "full",
                "type": "link",
                "link": "https://www.aseprite.org/"
              },
              {
                "width": "half",
                "text": "Ive been using a sprite editing tool called Aseprite. Its cheap, powerful, and really fun to use! The workflow reminds me a lot of doing timeline animation in Adobe Flash"
              },
              {
                "width": "half",
                "image": "project-raccoontrapper/sample-oldlady.gif"
              },
              {
                "width": "half",
                "image": "project-raccoontrapper/sample-oldlady.gif"
              },
              {
                "width": "half",
                "image": "project-raccoontrapper/sample-raccoon.gif"
              }
            ]
          ]
        },
        {
          "title": "About Phaser",
          "description": "",
          "blorbs": [
            [
              {
                "width": "full",
                "type": "link",
                "link": "https://phaser.io/"
              },
              {
                "width": "full",
                "text": [
                  "Im using the JS game framework 'Phaser', which has a very strong online community. They seem to provide just enough framework to allow you to build games quckly, while not so much that it impedes on your creativity.",
                  "Ive been working through setting up a template using webpack and other tools."
                ]
              },
              {
                "width": "half",
                "image": "project-raccoontrapper/phaser-logo.png"
              }
            ]
          ]
        }
      ]
    },
    {
      "skip": true,
      "title": "Office Dashboard",
      "description": "A persistent dashboard with touch events",
      "linkTitle": "",
      "theme": "",
      "dividerTheme": "clouds-left",
      "text": "At Ozmo, I had the opportunity to pitch an idea for a dashboard to show analytics, company events, new hires, birthdays, etc. We were able to get a large touch screen display to power it",
      "listGroups": [],
      "details": [
        {
          "title": "Jumpin between iframes",
          "description": "",
          "blorbs": [
            [
              {
                "width": "full",
                "text": "The dashboard is basically an iframe slideshow, with a few built in pages"
              },
              {
                "width": "full",
                "image": "project-rotater/jsonstructure.jpg"
              }
            ]
          ]
        },
        {
          "title": "On at the right times",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": "I had a few people help me get a pi4 setup on rasbian. The computer hides behind the screen, and also controls turning on/turning off the display. On launch, it loads the internal site. Any updates to the dashboard can be deployed at anytime without touching hardware"
              },
              {
                "width": "half",
                "image": "project-rotater/jsonstructure.jpg"
              }
            ]
          ]
        },
        {
          "title": "Details! Dogs! Data!",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": "After about a year of use, we integrated with our HR system's API to pull user info. We even put a setup together for keeping track of dog birthdays :)"
              },
              {
                "width": "half",
                "image": "project-rotater/jsonstructure.jpg"
              }
            ]
          ]
        }
      ]
    },
    {
      "title": "Rotater",
      "description": "React component for animating image sequences",
      "linkTitle": "",
      "theme": "",
      "dividerTheme": "clouds-left",
      "text": "A million years ago, I used to be really into 3D modeling and animation. I wanted to bring some form of depth into a relatively simple 2d implementation. I made a component that can take a sequence of images, and with the help of a little bit of fake physics, make it come to life",
      "listGroups": [
        {
          "title": "Links",
          "items": [
            {
              "type": "link",
              "text": "Get rotatin!",
              "url": "https://www.thomasyancey.com/projects/rotater/index.html"
            },
            {
              "type": "link",
              "text": "GitHub",
              "url": "//github.com/thyancey/tly-rotater"
            }
          ]
        }
      ],
      "details": [
        {
          "title": "Simulating rotation",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": "I simulated some amount of velocity, acceleration, and drag to the rotation, so that when you gave it a spin, it seems more real."
              },
              {
                "width": "half",
                "image": "project-rotater/rotater-01.jpg"
              }
            ]
          ]
        },
        {
          "title": "Simple definition file",
          "description": "",
          "blorbs": [
            [
              {
                "width": "half",
                "text": "The component accepts only a few properties that are pretty easy to implement and understand. An image pattern lets you define the naming convention of your image sequence, or you could instead define all the image urls manually."
              },
              {
                "width": "half",
                "image": "project-rotater/jsonstructure.jpg"
              }
            ]
          ]
        }
      ]
    }
  ]
}